mu=as.matrix(rbind(mu1,mu2,mu3,mu4))
convergence=e+1
y=matrix(0,nrow = I, ncol = 1)
norms=matrix(0, nrow = K , ncol = 1)
while(convergence>e){
convergence=0
#Association de chaque point Ã  son centre
for(i in 1:I){#Parcours des points
#Calcul des distances entre le point i et chacun des centres
for(k in 1:K){
norms[k]=norm(x[i,]-mu[k,],'2')
}
#recuperation de l'indice du centre correspondant au point i
for(k in 1:K){
if(norms[k]==min(norms)){
y[i]=k
}
}
}
#Calcul des centres en prennant la moyenne locales du cluster
for(k in 1:K){
#Initialisation des sommes
s1=matrix(0,nrow = 2, ncol = 1)
s2=0
for(i in 1:I){
if(y[i]==k){
#Calcul des sommes
s1=s1+x[i,]
s2=s2+1
}
}
#Verification de la convergence globale
convergence=convergence+(norm(mu[k,]-s1/s2,'2'))^2
#Mise a jour des centres
mu[k,]=s1/s2
}
convergence=convergence/K
}
return(mu)
}
clustering=function(x,mu){
K=4
I=nrow(x)
y<-matrix(1,nrow = I, ncol = 1)
norms<-matrix(0, nrow = K , ncol = 1)
for(i in 1:I){#Parcours des points
#Calcul des distances entre le point i et chacun des centres
for(k in 1:K){
norms[k]=norm(x[i,]-mu[k,],'2')
}
#recuperation de l'indice du centre correspondant au point i
for(k in 1:K){
if(norms[k]==min(norms)){
y[i]<-k
}
}
}
return(norms)
}
#Output
centers=kmeansfunction(X,0.1)
#Training
plot(X[,1],X[,2],xlab='x1', ylab='x2',xlim=c(-1,11),ylim=c(-1,11))
points(centers, col="red")
points(means[,1],means[,2],col="pink")
#Clustering
Y=clustering(X,centers)
#Data test
x11_test=rnorm(25,means[1,1],1)
x12_test=rnorm(25,means[2,1],1)
x13_test=rnorm(25,means[3,1],1)
x14_test=rnorm(25,means[4,1],1)
x21_test=rnorm(25,means[1,2],1)
x22_test=rnorm(25,means[2,2],1)
x23_test=rnorm(25,means[3,2],1)
x24_test=rnorm(25,means[4,2],1)
x1_test=c(x11_test,x12_test,x13_test,x14_test)
x2_test=c(x21_test,x22_test,x23_test,x24_test)
X_test=as.matrix(cbind(x1_test,x2_test))
#Testing
plot(X_test[,1],X_test[,2],xlab='x1', ylab='x2',xlim=c(-1,11),ylim=c(-1,11))
points(centers, col="red")
points(means[,1],means[,2],col="pink")
View(y)
source('C:/Users/nmace/AppData/Local/Packages/Microsoft.MicrosoftEdge_8wekyb3d8bbwe/TempState/Downloads/K-means (1).R', echo=TRUE)
s1
s1
s1=matrix(0,nrow = 2, ncol = 1)
s2=0
for(i in 1:I){
if(y[i]==k){
#Calcul des sommes
s1=s1+x[i,]
s2=s2+1
}
source('C:/Users/nmace/Downloads/PCA.R', echo=TRUE)
source('C:/Users/nmace/Downloads/PCA.R', echo=TRUE)
source('C:/Users/nmace/Downloads/PCA.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
X1=Database[,1]
X2=Database[,2]
Y=Database[,3]
X=matrix(data=0,row=I,col=2)
X=cbind(X1,X2)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
X1=Database[,1]
X2=Database[,2]
Y=Database[,3]
X=matrix(data=0,row=51,col=2)
X=cbind(X1,X2)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
X1=Database[,1]
X2=Database[,2]
Y=Database[,3]
X=matrix(data=0,row=2,col=51)
X=cbind(X1,X2)
source('~/R/ProjectML1.R', echo=TRUE)
View(X)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
X1=Database[,1]
X2=Database[,2]
Y=Database[,3]
X=cbind(X1,X2)
View(X)
W=matrix(data=0.1,row=5,col=2)
W=matrix(data=0.1,5,2)
View(W)
ClclPds(X,W)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
X1=Database[,1]
X2=Database[,2]
Y=Database[,3]
X=cbind(X1,X2)
W=matrix(data=0.1,5,2)
ClclPds=function(x,w){
h=t(x)%*%w
return(h)
}
ClclPds(X,W)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
X1=Database[,1]
X2=Database[,2]
Y=Database[,3]
X=cbind(X1,X2)
W=matrix(data=0.1,5,2)
ClclPds=function(x,w){
h=t(w)%*%x
return(h)
}
ClclPds(X,W)
t(w)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
X1=Database[,1]
X2=Database[,2]
Y=Database[,3]
X=cbind(X1,X2)
W=matrix(data=0.1,5,2)
ClclPds=function(x,w){
h=w%*%t(x)
return(h)
}
ClclPds(X,W)
View(ClclPds)
function(x,w){
h=w%*%t(x)
return(h)
}
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
X=I%*%t(x)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
X=I%*%t(x)
H=function(X){
h=1/(1+exp(-X))
return h
}
#Hidden function
H=1/(1+exp(-X))
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,51,1)
X=I%*%t(x)+B
#Hidden function
H=1/(1+exp(-X))
I%*%t(x)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,1,51)
X=I%*%t(x)+B
#Hidden function
H=1/(1+exp(-X))
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,1,51)
X=I%*%t(x)+B
#Hidden function
H=1/(1+exp(-X))
View(I)
View(x)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,1,51)
X=I%*%t(x)
View(W)
View(X)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,2,51)
X=I%*%t(x)+B
#Hidden function
H=1/(1+exp(-X))
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,2,51)
X=I%*%t(x)+B
#Hidden function
f=1/(1+exp(-X))
F=I%*%t(t(f))+B
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,2,51)
Xb=I%*%t(x)
xbb=xb%*%W
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,2,51)
xb=I%*%t(x)
xbb=xb%*%W
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,2,51)
xb=I%*%t(x)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
W=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,2,51)
xb=I%*%t(x)
v=matrix(data=0.1,5,2)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
v=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,2,51)
xb=I%*%t(x)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
v=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,2,51)
xb=I%*%t(x)
xbb=xb%*%v
xbb=xb*v
xbb=xb%*%v
xbb=v%*%xb
#Hidden function
F=1/(1+exp(-xbb))
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
v=matrix(data=0.1,5,2)
I=diag(1,2,2)
B=matrix(1,2,51)
xb=I%*%t(x)
xbb=v%*%xb
#Hidden function
F=1/(1+exp(-xbb))
Fb=I%*%F
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
v=matrix(data=0.1,5,2)
I=diag(1,51,1)
B=matrix(1,2,51)
xb=I%*%t(x)
xbb=v%*%xb
#Hidden function
F=1/(1+exp(-xbb))
Fb=I%*%F
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
v=matrix(data=0.1,5,2)
I=diag(1,51,1)
B=matrix(1,2,51)
xb=I%*%t(x)
xbb=v%*%xb
#Hidden function
F=1/(1+exp(-xbb))
Fb=I%*%F
xbb=v%*%xb
xb=I%*%t(x)
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
v=matrix(data=0.1,5,2)
I=matrix(1,51,1)
B=matrix(1,2,51)
xb=I%*%t(x)
xb=t(I)%*%t(x)
xb=t(x)%*%I
xbb=v%*%xb
#Hidden function
F=1/(1+exp(-xbb))
Fb=I%*%F
#Hidden function
F=1/(1+exp(-xbb))
Fb=F%*%I
Fb=F%*%I
length(F)
Fb=I%*%F
Fb=t(F)%*%I
Fb=F%*%If
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
v=matrix(data=0.1,5,2)
I=matrix(1,51,1)
B=matrix(1,2,51)
xb=t(x)%*%I
xbb=v%*%xb
F=1/(1+exp(-xbb))
If=matrix(1,length(F),1)
Fb=F%*%If
Fb=t(F)%*%If
Fbb=Fb%*%w
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
#weights
v=matrix(data=0.1,5,2)
w=matrix(data=0.3,1,5)
#diagonal and bias
I=matrix(1,51,1)
If=matrix(1,length(F),1)
B=matrix(1,2,51)
xb=t(x)%*%I
xbb=v%*%xb
F=1/(1+exp(-xbb))
Fb=t(F)%*%If
Fbb=Fb%*%w
G=1/(1+exp(-Fbb))
Database <- read.table("C:/Users/nmace/Downloads/data_FFNN.txt")
x1=Database[,1]
x2=Database[,2]
Y=Database[,3]
x=cbind(x1,x2)
#weights
v=matrix(data=0.1,5,2)
w=matrix(data=0.3,1,5)
lbda=0.01
#diagonal and bias
I=matrix(1,51,1)
If=matrix(1,length(F),1)
B=matrix(1,2,51)
xb=t(x)%*%I
xbb=v%*%xb
F=1/(1+exp(-xbb))
Fb=t(F)%*%If
Fbb=Fb%*%w
G=1/(1+exp(-Fbb))
source('~/R/ML4.R', echo=TRUE)
source('~/R/ML4.R', echo=TRUE)
#Nb de boulets de canons
N=10000
X=runif(N,0,2)
Y=runif(N,0,2)
#Nb de fois dans le cercle
K=(X-1)^2+(Y-1)^2<1
MCest=cumsum(K)/(1:N)*4
SN=sqrt((1/N)*sum(K-MCest)^2)
borneinf=MCest-SN*qnorm(0.975)/sqrt(1:N)
bornesup=MCest+SN*qnorm(0.975)/sqrt(1:N)
plot(X)
plot(MCest,type="l",ylim=range(2.9,3.6))
lines(rep(pi,N),type="l",col="red")
lines(borneinf,type="l",col="blue")
lines(bornesup,type="l",col="purple")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
getwd("Courtiers.txt")
source('~/.active-rstudio-document', encoding = 'UTF-8')
getwd
getwd()
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/EDOStochastique.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#Nb de boulets de canons
N=10000
source('~/.active-rstudio-document', echo=TRUE)
?cumsum
(1:N)
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
getwd()
setwd("C:/Users/nmace/Documents/ING4/PPE/PPE_BuyHold")
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
f_nb_actions_seuil(1000,110)
cash=matrix(Capital,10,2)
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
View(d2)
View(d2)
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
View(stock_price)
View(stock_price)
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
View(f_equilibrage)
View(f_equilibrage)
View(f_equilibrage)
View(f_equilibrage)
View(f_equilibrage)
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
source('~/ING4/PPE/PPE_BuyHold/Equilibrage.R')
